"use client";

import ButtonsGroup from "@/components/ButtonGroup";
import BreadCrumb from "@sp/ui/components/shared/BreadCrumb";
import TextView from "@sp/ui/components/shared/TextView";
import { useState, useEffect } from "react";
import { FiAlertCircle } from "react-icons/fi";
import QrScannerModal from "@/components/qr-scanner-disability-modal";

const breadcrumbItems = [
  { title: "ទំព័រដើម", link: "/" },
  { title: "កម្មវិធី DIP", link: "/dip" },
  { title: "ចូលរួមជាអ្នកជួយរាយការណ៍", link: "/dip/report" },
];

export default function Page() {
  const [currentStep, setCurrentStep] = useState(1);
  const [answers, setAnswers] = useState<{ [key: string]: string }>({});
  const [cameraError, setCameraError] = useState<string | null>(null);
  const [scannedId, setScannedId] = useState<string | null>(null);
  const [showQRPopup, setShowQRPopup] = useState(false);

  const [timeLeft, setTimeLeft] = useState(0);
  const [canResend, setCanResend] = useState(true);

  // Countdown timer for resend OTP
  useEffect(() => {
    let timer: NodeJS.Timeout;
    if (!canResend && timeLeft > 0) {
      timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);
    } else if (timeLeft === 0) {
      setCanResend(true);
    }
    return () => clearTimeout(timer);
  }, [timeLeft, canResend]);

  const handleResend = () => {
    if (canResend) {
      console.log("Resend OTP");
      setCanResend(false);
      setTimeLeft(30);
    }
  };

  return (
    <div className="w-full bg-gray-50">
      <BreadCrumb items={breadcrumbItems} />
      <div className="flex flex-col items-center justify-center px-4 sm:px-6 md:px-8 py-8">
        <div className="bg-white rounded-xl shadow-lg p-8 max-w-3xl w-full">
          <div className="flex items-center mb-6">
            <img
              src="/dip/images/logo.png"
              alt="DIP Logo"
              className="h-12 w-auto mr-3"
            />
            <h1 className="text-2xl font-bold text-gray-800">
              កម្មវិធី DIP
            </h1>
          </div>

          {/* Error Message */}
          {cameraError && (
            <div className="mb-4 flex items-center gap-2 text-red-600 bg-red-50 p-3 rounded-lg">
              <FiAlertCircle className="text-xl flex-shrink-0" />
              <p className="text-sm">{cameraError}</p>
            </div>
          )}

          {/* Step 1 */}
          {currentStep === 1 && (
            <div className="space-y-5">
              <div className="bg-gray-50 p-4 sm:p-6 space-y-5 rounded-lg">
                <div className="flex items-center gap-4">
                  <img
                    src="/dip/images/QR_code.png"
                    className="h-[42px] w-[42px] object-contain mb-3 cursor-pointer"
                    alt="QR code"
                    onClick={() => {
                      setCameraError(null);
                      setShowQRPopup(true);
                    }}
                  />
                  <TextView type="label">សូមស្កេន QR Code</TextView>
                </div>
                {scannedId && (
                  <p className="text-green-600 font-medium">
                    បានស្កេនកូដ៖ {scannedId}
                  </p>
                )}
              </div>
            </div>
          )}

          {/* Step 2 */}
          {currentStep === 2 && (
            <div className="space-y-5">
              <div className="bg-gray-50 p-4 sm:p-6 rounded-lg">
                <TextView type="label">បញ្ចូលលេខ OTP</TextView>
                <input
                  type="text"
                  className="mt-2 block w-full px-4 py-3 rounded-lg border border-gray-300 shadow-sm focus:ring focus:ring-blue-500 focus:border-blue-500"
                  placeholder="------"
                  maxLength={6}
                  value={answers[`otp${currentStep}`] || ""}
                  onChange={(e) =>
                    setAnswers({
                      ...answers,
                      [`otp${currentStep}`]: e.target.value,
                    })
                  }
                />
                <div className="mt-3 text-sm text-gray-600">
                  {canResend ? (
                    <button
                      onClick={handleResend}
                      className="text-blue-600 hover:underline"
                    >
                      ផ្ញើ OTP ម្តងទៀត
                    </button>
                  ) : (
                    <span>សូមរង់ចាំ {timeLeft} វិនាទី ដើម្បីផ្ញើ OTP ម្តងទៀត</span>
                  )}
                </div>
              </div>
            </div>
          )}

          {/* Buttons */}
          <ButtonsGroup
            currentStep={currentStep}
            setCurrentStep={setCurrentStep}
            totalSteps={2}
          />
        </div>
      </div>

      {/* ✅ QR Scanner Modal */}
      <QrScannerModal
        isOpen={showQRPopup}
        onClose={() => setShowQRPopup(false)}
        onScan={(scannedValue) => {
          const parts = scannedValue.split("&");
          if (parts.length < 2 || parts[1] === undefined) {
            setCameraError("ទម្រង់កូដ QR មិនត្រឹមត្រូវ។ សូមព្យាយាមម្តងទៀត។");
            return;
          }

          const scannedId = parts[1];
          setScannedId(scannedId);

          const inputField = `input${currentStep}`;
          setAnswers((prev) => ({
            ...prev,
            [inputField]: scannedId,
          }));

          setShowQRPopup(false);
        }}
      />
    </div>
  );
}
